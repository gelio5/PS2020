<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
    <generated>
      <config projectName="Easy_1_1" targetName="simple_test" />
      <config projectName="Easy_1_1" targetName="gtest_main" />
      <config projectName="Easy_1_1" targetName="Stack" />
      <config projectName="Easy_1_1" targetName="gmock" />
      <config projectName="Easy_1_1" targetName="gtest" />
      <config projectName="Easy_1_1" targetName="gmock_main" />
      <config projectName="Easy_1_1" targetName="Easy_1_1" />
    </generated>
  </component>
  <component name="CMakeSettings" AUTO_RELOAD="true">
    <configurations>
      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="04fe185d-f90a-4f40-acb7-33e7a71b7f81" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/CXX.includecache" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/depend.internal" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/embed.manifest" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/intermediate.manifest" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/manifest.rc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/manifest.res" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/vc140.pdb" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/Easy_1_1.exe" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/Easy_1_1.ilk" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmake-build-debug/Easy_1_1.pdb" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/.clang-format" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/.travis.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/BUILD.bazel" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/CONTRIBUTING.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/WORKSPACE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/appveyor.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/ci/build-linux-bazel.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/ci/build-platformio.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/ci/env-linux.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/ci/env-osx.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/ci/get-nprocessors.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/ci/install-linux.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/ci/install-osx.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/ci/install-platformio.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/ci/log-config.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/ci/travis.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/CONTRIBUTORS" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/cmake/gmock.pc.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/cmake/gmock_main.pc.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/docs/cheat_sheet.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/docs/cook_book.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/docs/for_dummies.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/docs/gmock_faq.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/docs/pump_manual.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/gmock-actions.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/gmock-cardinalities.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/gmock-function-mocker.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/gmock-generated-actions.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/gmock-generated-actions.h.pump" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/gmock-matchers.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/gmock-more-actions.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/gmock-more-matchers.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/gmock-nice-strict.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/gmock-spec-builders.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/gmock.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/internal/custom/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/internal/custom/gmock-generated-actions.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/internal/custom/gmock-generated-actions.h.pump" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/internal/custom/gmock-matchers.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/internal/custom/gmock-port.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/internal/gmock-internal-utils.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/internal/gmock-port.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/include/gmock/internal/gmock-pp.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/scripts/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/scripts/fuse_gmock_files.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/scripts/generator/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/scripts/generator/README" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/scripts/generator/README.cppclean" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/scripts/generator/cpp/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/scripts/generator/cpp/ast.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/scripts/generator/cpp/gmock_class.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/scripts/generator/cpp/gmock_class_test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/scripts/generator/cpp/keywords.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/scripts/generator/cpp/tokenize.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/scripts/generator/cpp/utils.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/scripts/generator/gmock_gen.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/scripts/pump.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/src/gmock-all.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/src/gmock-cardinalities.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/src/gmock-internal-utils.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/src/gmock-matchers.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/src/gmock-spec-builders.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/src/gmock.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/src/gmock_main.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/BUILD.bazel" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock-actions_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock-cardinalities_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock-function-mocker_nc.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock-function-mocker_nc_test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock-function-mocker_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock-generated-actions_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock-generated-matchers_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock-internal-utils_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock-matchers_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock-more-actions_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock-nice-strict_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock-port_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock-pp-string_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock-pp_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock-spec-builders_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock_all_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock_ex_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock_leak_test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock_leak_test_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock_link2_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock_link_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock_link_test.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock_output_test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock_output_test_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock_output_test_golden.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock_stress_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/gmock_test_utils.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googlemock/test/pump_test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/CONTRIBUTORS" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/cmake/Config.cmake.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/cmake/gtest.pc.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/cmake/gtest_main.pc.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/cmake/internal_utils.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/cmake/libgtest.la.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/docs/advanced.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/docs/faq.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/docs/pkgconfig.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/docs/primer.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/docs/samples.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/gtest-death-test.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/gtest-matchers.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/gtest-message.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/gtest-param-test.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/gtest-printers.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/gtest-spi.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/gtest-test-part.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/gtest-typed-test.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/gtest.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/gtest_pred_impl.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/gtest_prod.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/internal/custom/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/internal/custom/gtest-port.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/internal/custom/gtest-printers.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/internal/custom/gtest.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/internal/gtest-death-test-internal.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/internal/gtest-filepath.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/internal/gtest-internal.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/internal/gtest-param-util.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/internal/gtest-port-arch.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/internal/gtest-port.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/internal/gtest-string.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/include/gtest/internal/gtest-type-util.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/prime_tables.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample1.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample1.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample10_unittest.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample1_unittest.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample2.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample2.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample2_unittest.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample3-inl.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample3_unittest.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample4.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample4.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample4_unittest.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample5_unittest.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample6_unittest.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample7_unittest.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample8_unittest.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/samples/sample9_unittest.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/scripts/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/scripts/common.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/scripts/fuse_gtest_files.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/scripts/gen_gtest_pred_impl.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/scripts/gtest-config.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/scripts/release_docs.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/scripts/run_with_path.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/scripts/upload.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/scripts/upload_gtest.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/src/gtest-all.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/src/gtest-death-test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/src/gtest-filepath.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/src/gtest-internal-inl.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/src/gtest-matchers.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/src/gtest-port.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/src/gtest-printers.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/src/gtest-test-part.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/src/gtest-typed-test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/src/gtest.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/src/gtest_main.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/BUILD.bazel" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-break-on-failure-unittest.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-break-on-failure-unittest_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-catch-exceptions-test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-catch-exceptions-test_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-color-test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-color-test_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-death-test-test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-death-test_ex_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-env-var-test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-env-var-test_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-filepath-test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-filter-unittest.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-filter-unittest_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-json-outfiles-test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-json-output-unittest.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-list-tests-unittest.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-list-tests-unittest_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-listener-test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-message-test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-options-test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-output-test-golden-lin.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-output-test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-output-test_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-param-test-invalid-name1-test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-param-test-invalid-name1-test_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-param-test-invalid-name2-test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-param-test-invalid-name2-test_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-param-test-test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-param-test-test.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-param-test2-test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-port-test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-printers-test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-setuptestsuite-test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-setuptestsuite-test_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-shuffle-test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-shuffle-test_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-test-part-test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-throw-on-failure-test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-throw-on-failure-test_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-uninitialized-test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/googletest-uninitialized-test_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest-typed-test2_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest-typed-test_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest-typed-test_test.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest-unittest-api_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_all_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_assert_by_exception_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_environment_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_help_test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_help_test_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_json_test_utils.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_list_output_unittest.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_list_output_unittest_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_main_unittest.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_no_test_unittest.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_pred_impl_unittest.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_premature_exit_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_prod_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_repeat_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_skip_check_output_test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_skip_environment_check_output_test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_skip_in_environment_setup_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_skip_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_sole_header_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_stress_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_test_macro_stack_footprint_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_test_utils.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_testbridge_test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_testbridge_test_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_throw_on_failure_ex_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_unittest.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_xml_outfile1_test_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_xml_outfile2_test_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_xml_outfiles_test.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_xml_output_unittest.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_xml_output_unittest_.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/gtest_xml_test_utils.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/production.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/googletest/test/production.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/library.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gtest/platformio.ini" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/tests/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/tests/test.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Stack.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Stack.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Stack.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Stack.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/cmake_clean.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/cmake_clean.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/depend.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/depend.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/objects1.rsp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Easy_1_1.dir/objects1.rsp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile2" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile2" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/TargetDirectories.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/TargetDirectories.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/progress.marks" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/progress.marks" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Easy_1_1.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Easy_1_1.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/main.cpp" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
    <option name="clangWarnings" value="-Wno-unused-variable,-Werror=implicit-function-declaration,-Wshadow,-Wno-shadow-field-in-constructor-modified,-Wno-shadow-ivar,-Wno--Wnonportable-include-path" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="CMakeLists.txt" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="IgnoredFileRootStore">
    <option name="generatedRoots">
      <set>
        <option value="D:\PS2020\Easy_1_1\.idea" />
      </set>
    </option>
  </component>
  <component name="ProjectId" id="1Xt8dxZyf6yiiR5RsV4d7Ua7R4g" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="cf.advertisement.text.has.clang-format" value="true" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="settings.editor.selected.configurable" value="CPPToolchains" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\PS2020\Easy_1_1\src" />
    </key>
  </component>
  <component name="RunManager" selected="Google Test.All in simple_test">
    <configuration name="All in simple_test" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" nameIsGenerated="true" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Easy_1_1" TARGET_NAME="simple_test" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Easy_1_1" RUN_TARGET_NAME="simple_test" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Easy_1_1" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Easy_1_1" TARGET_NAME="Easy_1_1" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Easy_1_1" RUN_TARGET_NAME="Easy_1_1">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Stack" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Easy_1_1" TARGET_NAME="Stack" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gmock" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Easy_1_1" TARGET_NAME="gmock" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gmock_main" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Easy_1_1" TARGET_NAME="gmock_main" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Easy_1_1" TARGET_NAME="gtest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest_main" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Easy_1_1" TARGET_NAME="gtest_main" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="simple_test" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Easy_1_1" TARGET_NAME="simple_test" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Easy_1_1" RUN_TARGET_NAME="simple_test">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.Easy_1_1" />
      <item itemvalue="CMake Application.gmock" />
      <item itemvalue="CMake Application.gmock_main" />
      <item itemvalue="CMake Application.gtest" />
      <item itemvalue="CMake Application.gtest_main" />
      <item itemvalue="CMake Application.Stack" />
      <item itemvalue="CMake Application.simple_test" />
      <item itemvalue="Google Test.All in simple_test" />
    </list>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="04fe185d-f90a-4f40-acb7-33e7a71b7f81" name="Default Changelist" comment="" />
      <created>1581854121880</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1581854121880</updated>
      <workItem from="1581854123409" duration="329000" />
      <workItem from="1581862053126" duration="3494000" />
      <workItem from="1581973706285" duration="2751000" />
      <workItem from="1582274422879" duration="1699000" />
      <workItem from="1582373390000" duration="1088000" />
      <workItem from="1582725183745" duration="1678000" />
      <workItem from="1583070362841" duration="2301000" />
      <workItem from="1583165272002" duration="2609000" />
      <workItem from="1583217270409" duration="3340000" />
      <workItem from="1583763683642" duration="9611000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="WindowStateProjectService">
    <state x="552" y="178" key="#New_File_Extensions" timestamp="1581944909109">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="552" y="178" key="#New_File_Extensions/0.0.1920.1040@0.0.1920.1040" timestamp="1581944909109" />
    <state x="141" y="155" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1583223746042">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="-1186" y="209" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1040/1920.-205.1280.984/-1280.62.1280.984@-1280.62.1280.984" timestamp="1583165391949" />
    <state x="141" y="155" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1920.1040@0.0.1920.1040" timestamp="1583223746042" />
    <state x="-440" y="62" key="FileChooserDialogImpl" timestamp="1583164792281">
      <screen x="-1280" y="62" width="1280" height="984" />
    </state>
    <state x="-440" y="62" key="FileChooserDialogImpl/0.0.1920.1040/1920.-205.1280.984/-1280.62.1280.984@-1280.62.1280.984" timestamp="1583164792281" />
    <state width="1237" height="197" key="GridCell.Tab.0.bottom" timestamp="1583774399656">
      <screen x="-3840" y="0" width="1280" height="680" />
    </state>
    <state width="1237" height="197" key="GridCell.Tab.0.bottom/0.0.1920.1040/-3840.0.1280.680@-3840.0.1280.680" timestamp="1583774399656" />
    <state width="916" height="340" key="GridCell.Tab.0.bottom/0.0.1920.1040@0.0.1920.1040" timestamp="1583223778245" />
    <state width="1237" height="197" key="GridCell.Tab.0.center" timestamp="1583774399655">
      <screen x="-3840" y="0" width="1280" height="680" />
    </state>
    <state width="1237" height="197" key="GridCell.Tab.0.center/0.0.1920.1040/-3840.0.1280.680@-3840.0.1280.680" timestamp="1583774399655" />
    <state width="916" height="340" key="GridCell.Tab.0.center/0.0.1920.1040@0.0.1920.1040" timestamp="1583223778245" />
    <state width="1237" height="197" key="GridCell.Tab.0.left" timestamp="1583774399655">
      <screen x="-3840" y="0" width="1280" height="680" />
    </state>
    <state width="1237" height="197" key="GridCell.Tab.0.left/0.0.1920.1040/-3840.0.1280.680@-3840.0.1280.680" timestamp="1583774399655" />
    <state width="916" height="340" key="GridCell.Tab.0.left/0.0.1920.1040@0.0.1920.1040" timestamp="1583223778245" />
    <state width="1237" height="197" key="GridCell.Tab.0.right" timestamp="1583774399656">
      <screen x="-3840" y="0" width="1280" height="680" />
    </state>
    <state width="1237" height="197" key="GridCell.Tab.0.right/0.0.1920.1040/-3840.0.1280.680@-3840.0.1280.680" timestamp="1583774399656" />
    <state width="916" height="340" key="GridCell.Tab.0.right/0.0.1920.1040@0.0.1920.1040" timestamp="1583223778245" />
    <state x="-3690" y="0" key="SettingsEditor" timestamp="1583769979676">
      <screen x="-3840" y="0" width="1280" height="680" />
    </state>
    <state x="-3690" y="0" key="SettingsEditor/0.0.1920.1040/-3840.0.1280.680@-3840.0.1280.680" timestamp="1583769979676" />
    <state x="656" y="344" key="com.intellij.ide.util.TipDialog" timestamp="1583217281685">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="656" y="344" key="com.intellij.ide.util.TipDialog/0.0.1920.1040/-1280.52.1280.984/1920.52.1280.984@0.0.1920.1040" timestamp="1583070565055" />
    <state x="656" y="344" key="com.intellij.ide.util.TipDialog/0.0.1920.1040/-1280.62.1280.984/1920.-205.1280.984@0.0.1920.1040" timestamp="1582373391967" />
    <state x="656" y="344" key="com.intellij.ide.util.TipDialog/0.0.1920.1040@0.0.1920.1040" timestamp="1583217281685" />
  </component>
</project>